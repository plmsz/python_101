# -*- coding: utf-8 -*-
"""Learn phyton.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1G9yeIlstczwtevYDEq62abqJeQ-Ghick
"""

name = "Jane"
my_age=13
print("Hello, my name is " + name + " and I am " + str(my_age) + " years old.")
# Indentation is important, this line would throw an error (IndentationError: unexpected indent)
#  test = 1

students = ["John", "Mark", "Jane", "Sarah"]
students[1:3]
# ['Mark', 'Jane']
students[0:2]
#['John', 'Mark']
students[:2]
#['John', 'Mark']
students[:4]
# ['John', 'Mark', 'Jane', 'Sarah']
newStudents=['Alice', 'Diego']
english_class = students + newStudents
# ['John', 'Mark', 'Jane', 'Sarah', 'Alice', 'Diego']
students[1:-1]
#'Mark', 'Jane']



students[1:3] = ['Rita', 'Maria']
print(students)
#['John', 'Rita', 'Maria', 'Sarah']

population=[["Chicago", 2.8], ["LA", 4.5], ['NYC', 8.1]]
population2=["Houston", 2.9]

combined_population = population[1:] + population2
print(combined_population)
#[['LA', 4.5], ['NYC', 8.1], 'Houston', 2.9]

age = 19
if age > 21:
  print("You're allowed to dring")
elif age > 18 and age <21:
  print("you can drink in brazil")
else:
  print("you're too young")
#you can drink in brazil

for i in range(0,5):
  print(i)

for name in students:
  print(name)

person = {"name":"Linda", "age":45}
person["age"]
person.get("phone","Not Found")
person.keys()
#dict_keys(['name', 'age'])
person.items()
#dict_items([('name', 'Linda'), ('age', 45)])
person.values()

for key, name in person.items():
  print(key,name)
  ''' name Linda
      age 45 '''

numbers_tupple=(6,3,2,1)
numbers=[6,3,2,1]
numbers.append(0)
#you can't append in tupples
print(numbers)

water = ['clear', 'high ph']
a, b = water
print(b)
#high ph
pets = ['cat', 'dog', 'bird', 'rabbit']
a, *b, c = pets
print('my favorite pet is', a, 'don`t care:', b, "cute too:", c)
#my favorite pet is cat don`t care: ['dog', 'bird'] cute too: rabbit

names = ["John", "Mark", "Jane", "Sarah"]
new_name_list = list(map(lambda name: name + "__", names))
print(new_name_list)
#['John__', 'Mark__', 'Jane__', 'Sarah__']
filtered_list = list(filter(lambda name: name[-1] == "e", names))
print(filtered_list)
new_name_list_2 = [name + '__' for name in names]
print(new_name_list_2)
new_name_list_3 = [name + "__" for name in names if name[-1]=="e"]
print(new_name_list_3)
#['Jane__']